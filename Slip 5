#include <unistd.h>
#include <stdio.h>
#include <string.h>

#define MESSAGE1 "Hello World"
#define MESSAGE2 "Hello SPPU"
#define MESSAGE3 "Linux is Funny"

int main() {
  int pipe_fds[2];
  pid_t child_pid;
  char buffer[1024];

  // Create an unnamed pipe
  if (pipe(pipe_fds) == -1) {
    perror("pipe");
    return 1;
  }

  // Create a child process
  child_pid = fork();
  if (child_pid == -1) {
    perror("fork");
    return 1;
  }

  if (child_pid == 0) {
    // Child process
    // Close the read end of the pipe
    close(pipe_fds[0]);

    // Write three messages to the pipe
    write(pipe_fds[1], MESSAGE1, strlen(MESSAGE1) + 1);
    write(pipe_fds[1], MESSAGE2, strlen(MESSAGE2) + 1);
    write(pipe_fds[1], MESSAGE3, strlen(MESSAGE3) + 1);

    // Close the write end of the pipe
    close(pipe_fds[1]);

    return 0;
  } else {
    // Parent process
    // Close the write end of the pipe
    close(pipe_fds[1]);

    // Read messages from the pipe
    for (int i = 0; i < 3; i++) {
      read(pipe_fds[0], buffer, sizeof(buffer));
      printf("Message %d: %s\n", i + 1, buffer);
    }

    // Close the read end of the pipe
    close(pipe_fds[0]);

    // Wait for the child process to terminate
    wait(NULL);
  }

  return 0;
}
